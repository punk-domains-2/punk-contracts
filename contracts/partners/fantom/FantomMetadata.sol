// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity ^0.8.4;

import "base64-sol/base64.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/Strings.sol";
import "../../lib/strings.sol";

/// @title .fantom domain metadata contract
/// @author Tempe Techie
/// @notice Contract that stores metadata for the .fantom TLD
contract FantomMetadata is Ownable {
  string public description = "Fantom Names - Your web3 username and digital identity powered by the Punk Domains protocol. Mint yours now on FantomNames.org.";
  string public brand = "FantomNames.org";

  // EVENTS
  event DescriptionChanged(address indexed user, string description);
  event BrandChanged(address indexed user, string brand);

  // READ
  function getMetadata(string calldata _domainName, string calldata _tld, uint256 _tokenId) public view returns(string memory) {
    string memory fullDomainName = string(abi.encodePacked(_domainName, _tld));
    uint256 domainLength = strings.len(strings.toSlice(_domainName));

    return string(
      abi.encodePacked("data:application/json;base64,", Base64.encode(bytes(abi.encodePacked(
        '{"name": "', fullDomainName, '", ',
        '"description": "', description, '", ',
        '"attributes": [',
          '{"trait_type": "length", "value": "', Strings.toString(domainLength) ,'"}'
        '], '
        '"image": "', _getImage(fullDomainName), '"}'))))
    );
  }

  function _getImage(string memory _fullDomainName) internal view returns (string memory) {
    string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(
      '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500" width="500" height="500">',
        '<defs><clipPath id="a5e4554c56"><path d="M 2 24.578125 L 186 24.578125 L 186 162.578125 L 2 162.578125 Z M 2 24.578125 " clip-rule="nonzero"/></clipPath></defs>',
        '<rect x="0" y="0" width="500" height="500" fill="#1969FF"/>',
        '<g transform="translate(150, 25)"><g clip-path="url(#a5e4554c56)"><path fill="#ffffff" d="M 29.828125 117.507812 C 40.941406 142.921875 66.804688 162.546875 94.675781 162.546875 L 105.113281 162.546875 C 138.136719 162.546875 177.96875 133.753906 184.886719 102.359375 C 186.160156 96.570312 181.574219 91.128906 175.625 91.128906 L 165.660156 91.128906 C 166.890625 88.359375 167.886719 85.496094 168.539062 82.539062 C 169.558594 77.882812 165.878906 73.515625 161.089844 73.515625 L 155.214844 73.515625 C 147.464844 45.324219 121.589844 24.605469 90.84375 24.605469 C 60.097656 24.605469 34.207031 45.324219 26.460938 73.515625 L 9.988281 73.515625 C 5.199219 73.515625 1.515625 77.882812 2.539062 82.539062 C 5.734375 97.027344 16.351562 109.488281 29.828125 117.507812 Z M 90.847656 34.382812 C 116.074219 34.382812 137.511719 50.824219 144.964844 73.515625 L 135.273438 73.515625 C 132.621094 73.515625 130.46875 75.660156 130.46875 78.308594 L 130.46875 78.5 C 130.46875 81.148438 132.621094 83.292969 135.273438 83.292969 L 158.191406 83.292969 C 154.742188 94.191406 145.578125 104.222656 133.785156 110.519531 C 132.316406 111.304688 131.308594 112.738281 131.167969 114.390625 L 131.152344 114.585938 C 130.832031 118.386719 134.871094 120.988281 138.253906 119.195312 C 146.796875 114.671875 154.367188 108.386719 159.921875 100.910156 L 175.15625 100.910156 C 168.988281 126.707031 133.910156 152.769531 105.113281 152.769531 L 94.679688 152.769531 C 79.757812 152.769531 64.421875 145.875 52.597656 133.859375 C 40.417969 121.472656 33.605469 105.476562 33.917969 89.972656 C 34.53125 59.320312 60.070312 34.382812 90.847656 34.382812 Z M 24.558594 83.292969 C 24.304688 85.425781 24.152344 87.585938 24.109375 89.777344 C 24.027344 93.8125 24.371094 97.820312 25.0625 101.765625 C 19.320312 96.382812 15.011719 90.003906 12.886719 83.292969 Z M 24.558594 83.292969 " fill-opacity="1" fill-rule="nonzero"/></g><path fill="#ffffff" d="M 61.625 78.25 C 61.625 78.777344 61.570312 79.304688 61.46875 79.824219 C 61.363281 80.34375 61.210938 80.851562 61.007812 81.339844 C 60.800781 81.828125 60.554688 82.296875 60.257812 82.738281 C 59.960938 83.175781 59.625 83.585938 59.25 83.960938 C 58.871094 84.335938 58.464844 84.671875 58.019531 84.964844 C 57.578125 85.257812 57.113281 85.507812 56.621094 85.710938 C 56.128906 85.914062 55.621094 86.066406 55.097656 86.171875 C 54.578125 86.273438 54.050781 86.328125 53.519531 86.328125 C 52.984375 86.328125 52.457031 86.273438 51.9375 86.171875 C 51.414062 86.066406 50.90625 85.914062 50.417969 85.710938 C 49.925781 85.507812 49.457031 85.257812 49.015625 84.964844 C 48.574219 84.671875 48.164062 84.335938 47.785156 83.960938 C 47.410156 83.585938 47.074219 83.175781 46.777344 82.738281 C 46.484375 82.296875 46.234375 81.828125 46.03125 81.339844 C 45.824219 80.851562 45.671875 80.34375 45.570312 79.824219 C 45.464844 79.304688 45.414062 78.777344 45.414062 78.25 C 45.414062 77.71875 45.464844 77.191406 45.570312 76.671875 C 45.671875 76.152344 45.824219 75.648438 46.03125 75.15625 C 46.234375 74.667969 46.484375 74.203125 46.777344 73.761719 C 47.074219 73.320312 47.410156 72.910156 47.785156 72.535156 C 48.164062 72.160156 48.574219 71.828125 49.015625 71.53125 C 49.457031 71.238281 49.925781 70.988281 50.417969 70.785156 C 50.90625 70.582031 51.414062 70.429688 51.9375 70.328125 C 52.457031 70.222656 52.984375 70.171875 53.519531 70.171875 C 54.050781 70.171875 54.578125 70.222656 55.097656 70.328125 C 55.621094 70.429688 56.128906 70.582031 56.621094 70.785156 C 57.113281 70.988281 57.578125 71.238281 58.019531 71.53125 C 58.464844 71.828125 58.871094 72.160156 59.25 72.535156 C 59.625 72.910156 59.960938 73.320312 60.257812 73.761719 C 60.554688 74.203125 60.800781 74.667969 61.007812 75.15625 C 61.210938 75.648438 61.363281 76.152344 61.46875 76.671875 C 61.570312 77.191406 61.625 77.71875 61.625 78.25 Z M 61.625 78.25 " fill-opacity="1" fill-rule="nonzero"/><path fill="#ffffff" d="M 98.503906 78.25 C 98.503906 78.777344 98.453125 79.304688 98.347656 79.824219 C 98.246094 80.34375 98.089844 80.851562 97.886719 81.339844 C 97.683594 81.828125 97.433594 82.296875 97.140625 82.738281 C 96.84375 83.175781 96.507812 83.585938 96.132812 83.960938 C 95.753906 84.335938 95.34375 84.671875 94.902344 84.964844 C 94.460938 85.257812 93.992188 85.507812 93.5 85.710938 C 93.011719 85.914062 92.503906 86.066406 91.980469 86.171875 C 91.460938 86.273438 90.933594 86.328125 90.398438 86.328125 C 89.867188 86.328125 89.339844 86.273438 88.820312 86.171875 C 88.296875 86.066406 87.789062 85.914062 87.296875 85.710938 C 86.804688 85.507812 86.339844 85.257812 85.898438 84.964844 C 85.453125 84.671875 85.042969 84.335938 84.667969 83.960938 C 84.292969 83.585938 83.957031 83.175781 83.660156 82.738281 C 83.363281 82.296875 83.113281 81.828125 82.910156 81.339844 C 82.707031 80.851562 82.554688 80.34375 82.449219 79.824219 C 82.347656 79.304688 82.292969 78.777344 82.292969 78.25 C 82.292969 77.71875 82.347656 77.191406 82.449219 76.671875 C 82.554688 76.152344 82.707031 75.648438 82.910156 75.15625 C 83.113281 74.667969 83.363281 74.203125 83.660156 73.761719 C 83.957031 73.320312 84.292969 72.910156 84.667969 72.535156 C 85.042969 72.160156 85.453125 71.828125 85.898438 71.53125 C 86.339844 71.238281 86.804688 70.988281 87.296875 70.785156 C 87.789062 70.582031 88.296875 70.429688 88.820312 70.328125 C 89.339844 70.222656 89.867188 70.171875 90.398438 70.171875 C 90.933594 70.171875 91.460938 70.222656 91.980469 70.328125 C 92.503906 70.429688 93.011719 70.582031 93.5 70.785156 C 93.992188 70.988281 94.460938 71.238281 94.902344 71.53125 C 95.34375 71.828125 95.753906 72.160156 96.132812 72.535156 C 96.507812 72.910156 96.84375 73.320312 97.140625 73.761719 C 97.433594 74.203125 97.683594 74.667969 97.886719 75.15625 C 98.089844 75.648438 98.246094 76.152344 98.347656 76.671875 C 98.453125 77.191406 98.503906 77.71875 98.503906 78.25 Z M 98.503906 78.25 " fill-opacity="1" fill-rule="nonzero"/></g>',
        '<text x="50%" y="50%" dominant-baseline="middle" fill="white" text-anchor="middle" font-size="x-large" font-family="sans-serif">',
        _fullDomainName,'</text>',
        '<text x="50%" y="70%" dominant-baseline="middle" fill="white" text-anchor="middle" font-family="sans-serif">',
        brand,'</text>',
      '</svg>'
    ))));

    return string(abi.encodePacked("data:image/svg+xml;base64,", svgBase64Encoded));
  }

  // WRITE (OWNER)

  /// @notice Only metadata contract owner can call this function.
  function changeDescription(string calldata _description) external onlyOwner {
    description = _description;
    emit DescriptionChanged(msg.sender, _description);
  }

  /// @notice Only metadata contract owner can call this function.
  function changeBrand(string calldata _brand) external onlyOwner {
    brand = _brand;
    emit BrandChanged(msg.sender, _brand);
  }
}